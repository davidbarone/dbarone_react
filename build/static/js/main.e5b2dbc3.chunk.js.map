{"version":3,"sources":["components/Posts/ViewPost.js","components/Posts/PostRelations.js","logo.svg","components/Posts/PostTeaser.js","services/AuthService.js","components/Posts/ListPosts.js","components/HomePage.js","components/SearchPage.js","components/Posts/PostForm.js","components/Posts/CreatePost.js","components/Resources/ResourcesGrid.js","components/Resources/UploadResource.js","components/Resources/ResourcesAdmin.js","components/AdminPage.js","components/AccountManagement.js","components/Posts/EditPost.js","components/Posts/SinglePost.js","components/Login/LoginPage.js","components/Login/LogoutPage.js","components/Login/UserInfo.js","components/Login/SignUpPage.js","App.js","serviceWorker.js","index.js"],"names":["ViewPost","props","handleEditPost","event","setMode","state","loaded","script","Promise","resolve","reject","onload","document","head","appendChild","this","post","style","createElement","innerText","replace","process","div","innerHTML","i","childNodes","length","child","nodeName","src","s","type","async","loadScriptSync","eval","forEach","code","createTextNode","e","text","setState","content","post_type","marked","relations","hasRelations","className","padding","ref","el","title","color","fontSize","updated_by","moment","published_dt","format","onClick","marginTop","dangerouslySetInnerHTML","__html","componentDidMount","height","display","flexDirection","navigation","React","Component","PostRelations","margin","parent","href","id","Array","isArray","siblings","map","value","index","key","children","module","exports","PostTeaser","useState","setPost","useEffect","a","fetch","res","json","fetchPost","teaser","originalSetItem","localStorage","setItem","apply","arguments","Event","window","dispatchEvent","originalRemoveItem","removeItem","getToken","getItem","setToken","token","getUser","decode","email","password","body","method","headers","JSON","stringify","then","get","catch","err","Error","login","logout","getUserRole","user","role","loggedIn","exp","Date","now","isTokenExpired","ListPosts","posts","setPosts","setErrors","Authorization","AuthService","console","log","fetchPosts","p","HomePage","width","cite","textAlign","icon","SearchPage","PostForm","getPostObject","titleField","current","teaserField","contentField","postTypeField","headField","codeField","styleField","parent_id","parseInt","parentIdField","undefined","publishedDtField","deleted","handleCancelEdit","handleSave","onSave","preventDefault","createRef","deletedField","onCancel","class","defaultValue","rows","placeholder","toISOString","substr","CreatePost","handleCancel","newPost","location","ResourcesGrid","downloadFile","data","Object","keys","onDeleteResource","borderCollapse","border","background","getColumns","c","row","field","ResourceUpload","onAddResource","onChangeHandler","useCallback","input","target","files","name","onSubmitHandler","getElementById","formData","FormData","append","htmlFor","onChange","disabled","ResourcesAdmin","getData","deleteResource","prevState","filter","addResource","UploadResource","AdminPage","mode","addPostButton","addPost","to","AccountManagement","EditPost","SinglePost","postComponent","LoginPage","submitted","loading","error","handleChange","bind","handleSubmit","from","pathname","history","push","onSubmit","LogoutPage","UserInfo","storageHandlerEvent","addEventListener","lineHeight","float","SignUpPage","library","add","fab","faGithub","faLinkedin","faEnvelopeSquare","faTrashAlt","faDownload","MainMenu","fontFamily","fontWeight","ViewPostX","match","params","App","position","right","path","component","exact","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5b2dbc3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\nimport PostRelations from \"./PostRelations\";\r\n\r\nclass ViewPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loaded: false };\r\n  }\r\n\r\n  loadScriptSync(script) {\r\n    return new Promise((resolve, reject) => {\r\n      script.onload = function() {\r\n        resolve({ script });\r\n      };\r\n\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Add inline style if set\r\n    if (this.props.post && !this.state.loaded) {\r\n      if (this.props.post.style) {\r\n        const style = document.createElement(\"style\");\r\n        style.innerText = this.props.post.style;\r\n        document.head.appendChild(style);\r\n      }\r\n\r\n      // Add head if any\r\n      // All head contents must be nodes with src attributes.\r\n      if (this.props.post.head) {\r\n        const head = this.props.post.head.replace(\r\n          /https:\\/\\/api.dbarone.com/g,\r\n          process.env.REACT_APP_API_ROOT\r\n        );\r\n        // Have to convert head string to node\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = head;\r\n\r\n        for (let i = 0; i < div.childNodes.length; i++) {\r\n          const child = div.childNodes[i];\r\n\r\n          if (child && child.nodeName === \"SCRIPT\" && child.src !== \"\") {\r\n            var s = document.createElement(\"script\");\r\n            s.type = \"text/javascript\";\r\n            s.src = child.src;\r\n            s.async = false;\r\n            //document.head.appendChild(s);\r\n            await this.loadScriptSync(s);\r\n          } else {\r\n            eval(child.innerHTML);\r\n          }\r\n        }\r\n        // Change this to div.childNodes to support multiple top-level nodes\r\n        div.childNodes.forEach(child => {});\r\n      }\r\n\r\n      // Add code if any\r\n      // Wrap this in inline <script> block.\r\n      if (this.props.post.code) {\r\n        const code = this.props.post.code.replace(\r\n          /https:\\/\\/api.dbarone.com/g,\r\n          process.env.REACT_APP_API_ROOT\r\n        );\r\n        const script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.async = false;\r\n\r\n        try {\r\n          // most browsers\r\n          script.appendChild(document.createTextNode(code));\r\n          document.head.appendChild(script);\r\n        } catch (e) {\r\n          // option (b) for other browsers\r\n          script.text = code;\r\n          document.head.appendChild(script);\r\n        }\r\n      }\r\n      this.setState({ loaded: true });\r\n    }\r\n  }\r\n\r\n  handleEditPost = event => {\r\n    this.props.setMode(\"EDIT\");\r\n  };\r\n\r\n  content() {\r\n    if (!this.props.post.content) {\r\n      return undefined;\r\n    }\r\n    if (this.props.post.post_type === \"MARKDOWN\") {\r\n      return marked(this.props.post.content).replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n    } else {\r\n      return this.props.post.content.replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n    }\r\n  }\r\n\r\n  navigation(relations) {\r\n    return relations.hasRelations ? (\r\n      <div className=\"navbar\">\r\n        <PostRelations relations={relations} />\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n  }\r\n\r\n  post(post) {\r\n    return (\r\n      <div style={{ padding: \"0% 10%\" }} ref={el => (this.div = el)}>\r\n        <h1>{post.title}</h1>\r\n        <div style={{ color: \"#999\", fontSize: \"0.8em\" }}>\r\n          By {post.updated_by} on {moment(post.published_dt).format(\"LL\")}\r\n          <div>\r\n            <button className=\"button\" onClick={this.handleEditPost}>\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ marginTop: \"6px\" }}\r\n          dangerouslySetInnerHTML={{ __html: this.content() }}\r\n        ></div>\r\n        {/* script inserted here */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { post, relations, setMode } = this.props;\r\n    this.componentDidMount();\r\n    return post && relations ? (\r\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n        {this.navigation(relations)}\r\n        {this.post(post)}\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPost;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst PostRelations = ({ relations }) => {\r\n  return relations && relations.hasRelations ? (\r\n    <div className=\"navbar\">\r\n      <div style={{ margin: \"0em 1em\" }}>\r\n        {relations.parent && (\r\n          <>\r\n            <h2>Parent</h2>\r\n            <a href={`/posts/${relations.parent.id}`}>\r\n              {relations.parent.title}\r\n            </a>\r\n          </>\r\n        )}\r\n        {Array.isArray(relations.siblings) && !!relations.siblings.length && (\r\n          <>\r\n            <h2>Siblings</h2>\r\n            {relations.siblings.map((value, index) => {\r\n              return (\r\n                <a key={value.id} href={`/posts/${value.id}`}>\r\n                  {value.title}\r\n                </a>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n\r\n        {Array.isArray(relations.children) && !!relations.children.length && (\r\n          <>\r\n            <h2>Children</h2>\r\n            {relations.children.map((value, index) => {\r\n              return (\r\n                <a key={value.id} href={`/posts/${value.id}`}>\r\n                  {value.title}\r\n                </a>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div />\r\n  );\r\n};\r\n\r\nexport default PostRelations;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\n\r\nconst PostTeaser = ({ id }) => {\r\n  const [post, setPost] = useState(null);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  const teaser = post => {\r\n    if (!post.teaser) {\r\n      return undefined;\r\n    }\r\n\r\n    return marked(post.teaser).replace(\r\n      /https:\\/\\/api.dbarone.com/g,\r\n      process.env.REACT_APP_API_ROOT\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts/${id}`);\r\n      const post = await res.json();\r\n      setPost(post);\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  return post ? (\r\n    <>\r\n      <h2>\r\n        <a href={\"/posts/\" + post.id}>{post.title}</a>\r\n      </h2>\r\n      <div style={{ color: \"#999\", fontSize: \"0.8em\" }}>\r\n        By {post.updated_by} on {moment(post.published_dt).format(\"LL\")}\r\n      </div>\r\n      <div\r\n        style={{ marginTop: \"6px\" }}\r\n        dangerouslySetInnerHTML={{ __html: teaser(post) }}\r\n      ></div>\r\n\r\n      <hr />\r\n    </>\r\n  ) : (\r\n    <div />\r\n  );\r\n};\r\n\r\nexport default PostTeaser;\r\n","import decode from \"jwt-decode\";\r\n\r\n// rewrite localStorage.setItem function, adding\r\n// custom event so that we can listen to changes\r\n// in other components.\r\n// The storage event only works in different\r\n// windows.\r\n// Ideally, we should put .User into Redux\r\nvar originalSetItem = localStorage.setItem;\r\nlocalStorage.setItem = function(key, value) {\r\n  originalSetItem.apply(this, arguments);\r\n  var event = new Event(\"localStorageChanged\");\r\n  event.value = value; // Optional..\r\n  event.key = key; // Optional..\r\n  window.dispatchEvent(event);\r\n};\r\n\r\n// Same for .removeItem\r\nvar originalRemoveItem = localStorage.removeItem;\r\nlocalStorage.removeItem = function(key) {\r\n  originalRemoveItem.apply(this, arguments);\r\n  var event = new Event(\"localStorageChanged\");\r\n  event.key = key; // Optional..\r\n  window.dispatchEvent(event);\r\n};\r\n\r\nfunction getToken() {\r\n  // Retrieves the user token from localStorage\r\n  const t = localStorage.getItem(\"token\");\r\n  return t;\r\n}\r\n\r\nfunction setToken(token) {\r\n  // Saves token to localStorage\r\n  localStorage.setItem(\"token\", token);\r\n}\r\n\r\nfunction getUser() {\r\n  const token = getToken();\r\n  const user = token && decode(token);\r\n  return user;\r\n}\r\n\r\nfunction getUserRole() {\r\n  const user = getUser();\r\n  const role = user && user.role;\r\n  return role;\r\n}\r\n\r\nfunction loggedIn() {\r\n  // Checks if there is a saved token and it's still valid\r\n  const token = getToken(); // GEtting token from localstorage\r\n  return !!token && !isTokenExpired(token); // handwaiving here\r\n}\r\n\r\nfunction isTokenExpired(token) {\r\n  try {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      // Checking if token is expired. N\r\n      return true;\r\n    } else return false;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function login(email, password) {\r\n  const body = {\r\n    email,\r\n    password\r\n  };\r\n\r\n  fetch(`${process.env.REACT_APP_API_ROOT}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  })\r\n    .then(res => {\r\n      const token = res.headers.get(\"x-access-token\");\r\n      setToken(token);\r\n    })\r\n    .catch(err => {\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getUser,\r\n  getUserRole,\r\n  getToken,\r\n  loggedIn\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostTeaser from \"./PostTeaser\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nconst ListPosts = props => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  async function fetchPosts() {\r\n    const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${AuthService.getToken()}`\r\n      }\r\n    });\r\n    console.log(res);\r\n    res\r\n      .json()\r\n      .then(res => setPosts(res))\r\n      .catch(err => setErrors(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Posts</h1>\r\n      {posts.map(p => (\r\n        <PostTeaser key={p.id} id={p.id} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPosts;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <>\r\n      <section\r\n        style={{\r\n          padding: \"80px 0px\"\r\n        }}\r\n      >\r\n        <div style={{ margin: \"auto\", width: \"1024px\", fontSize: \"x-large\" }}>\r\n          <blockquote cite=\"https://www.dbarone.com/\">\r\n            <p>\r\n              Ordinary people always ask me 'How have you made the Business\r\n              Intelligence community a better place?'. I tell them 'I'm good\r\n              with colors. I use a lot of them in my charts. Accountants seem to\r\n              like me because I compliment them on their Excel skills. I love\r\n              working with complex organisations because German ERP software\r\n              brings the best out in me. If you talk about Big Data, I'll smile\r\n              at you like I pretend to know what you're talking about, but above\r\n              all, I've put the humanity (and sexuality) back into BI.\r\n            </p>\r\n            <cite>\r\n              <a href=\"https://www.dbarone.com\">David Barone</a>\r\n            </cite>\r\n          </blockquote>\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <a\r\n            title=\"Linkedin\"\r\n            href=\"https://www.linkedin.com/in/david-barone-083aa05b/\"\r\n          >\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon={[\"fab\", \"linkedin\"]}\r\n            />\r\n          </a>\r\n\r\n          <a title=\"Github\" href=\"https://github.com/davidbarone\">\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon={[\"fab\", \"github\"]}\r\n            />\r\n          </a>\r\n\r\n          <a title=\"Mail\" href=\"mailto:davidbarone@live.com\">\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon=\"envelope-square\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst SearchPage = props => {\r\n  return (\r\n    <>\r\n      <h1>Search</h1>\r\n      There's currently nothing to do here...\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = props.post.id;\r\n    this.titleField = React.createRef();\r\n    this.teaserField = React.createRef();\r\n    this.contentField = React.createRef();\r\n    this.postTypeField = React.createRef();\r\n    this.headField = React.createRef();\r\n    this.codeField = React.createRef();\r\n    this.styleField = React.createRef();\r\n    this.parentIdField = React.createRef();\r\n    this.publishedDtField = React.createRef();\r\n    this.deletedField = React.createRef();\r\n  }\r\n\r\n  getPostObject = () => {\r\n    return {\r\n      id: this.id,\r\n      title: this.titleField.current.value,\r\n      teaser: this.teaserField.current.value,\r\n      content: this.contentField.current.value,\r\n      post_type: this.postTypeField.current.value,\r\n      head: this.headField.current.value,\r\n      code: this.codeField.current.value,\r\n      style: this.styleField.current.value,\r\n      parent_id: parseInt(this.parentIdField.current.value) || undefined,\r\n      published_dt: new Date(this.publishedDtField.current.value) || moment(),\r\n      deleted: false // this.deletedField.current.value || false\r\n    };\r\n  };\r\n\r\n  handleCancelEdit = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n\r\n  handleSave = e => {\r\n    const post = this.getPostObject();\r\n    this.props.onSave(post, e);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { post, onSave, onCancel } = this.props || {};\r\n\r\n    return (\r\n      <>\r\n        <h1>Edit Post</h1>\r\n        <form>\r\n          <fieldset>\r\n            <legend>Edit / Create Post</legend>\r\n            <button class=\"button primary\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n            <button class=\"button\" onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n            <label>Title:</label>\r\n            <input\r\n              className=\"full-width\"\r\n              type=\"text\"\r\n              ref={this.titleField}\r\n              defaultValue={post.title}\r\n            ></input>\r\n            <label>Teaser (This section ONLY supports MARKDOWN):</label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"3\"\r\n              ref={this.teaserField}\r\n              defaultValue={post.teaser}\r\n            ></textarea>\r\n            <label>\r\n              Content (Note no executable code here. Put scripts in head or\r\n              code):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"20\"\r\n              ref={this.contentField}\r\n              defaultValue={post.content}\r\n            ></textarea>\r\n            <label>Post Type:</label>\r\n            <select ref={this.postTypeField} defaultValue={post.post_type}>\r\n              <option>HTML</option>\r\n              <option>MARKDOWN</option>\r\n            </select>\r\n            <label>\r\n              Head (Script links to external files and other CSS links etc):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"3\"\r\n              ref={this.headField}\r\n              defaultValue={post.head}\r\n            ></textarea>\r\n            <label>\r\n              Code (Inline JS without the script tag - just the JS code):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"20\"\r\n              ref={this.codeField}\r\n              defaultValue={post.code}\r\n              placeholder=\"const hello_world = 'hello world!';\r\nalert(hello_world);\"\r\n            ></textarea>\r\n            <label>Style:</label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"10\"\r\n              ref={this.styleField}\r\n              defaultValue={post.style}\r\n            ></textarea>\r\n            <label>Published Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              ref={this.publishedDtField}\r\n              defaultValue={new Date(post.published_dt || moment())\r\n                .toISOString()\r\n                .substr(0, 10)}\r\n            ></input>\r\n            <label>Parent ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              ref={this.parentIdField}\r\n              defaultValue={post.parent_id}\r\n            ></input>\r\n            <label>Deleted:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              ref={this.deletedField}\r\n              defaultValue={post.deleted}\r\n            ></input>\r\n          </fieldset>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass CreatePost extends React.Component {\r\n  handleCancel = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n  handleSave = async (post, event) => {\r\n    // Save post\r\n    console.log(post);\r\n    const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: AuthService.getToken()\r\n      }\r\n    });\r\n    const newPost = await res.json();\r\n    console.log(newPost);\r\n    // Navigate to post\r\n    window.location = `/posts/${newPost.id}`;\r\n  };\r\n\r\n  render() {\r\n    return <PostForm post={{}} onSave={this.handleSave} />;\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass ResourcesGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n  }\r\n\r\n  downloadFile = id => {\r\n    window.location.href = `${process.env.REACT_APP_API_ROOT}/resources/${id}`;\r\n  };\r\n\r\n  getColumns(data) {\r\n    return data ? Object.keys(data[0]) : [];\r\n  }\r\n\r\n  render() {\r\n    const { data, onDeleteResource } = this.props;\r\n\r\n    return data ? (\r\n      <>\r\n        <table style={{ borderCollapse: \"collapse\", border: \"1px solid #ddd\" }}>\r\n          <thead>\r\n            <tr style={{ background: \"#252525\" }}>\r\n              {this.getColumns(data).map(c => (\r\n                <th key={c} style={{ padding: \"1em 0.5em\" }}>\r\n                  {c}\r\n                </th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map(row => (\r\n              <tr key={row.id}>\r\n                {Object.keys(row).map(field => (\r\n                  <td key={field} style={{ padding: \"0.25em 0.5em\" }}>\r\n                    {row[field]}\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  <button\r\n                    style={{ margin: \"0px 2px\" }}\r\n                    title=\"delete\"\r\n                    href=\".\"\r\n                    onClick={() => onDeleteResource(row.id)}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      style={{ fontSize: 20 }}\r\n                      icon=\"trash-alt\"\r\n                    />\r\n                  </button>\r\n\r\n                  <button\r\n                    style={{ margin: \"0px 2px\" }}\r\n                    title=\"download\"\r\n                    href=\".\"\r\n                    onClick={() => this.downloadFile(row.id)}\r\n                  >\r\n                    <FontAwesomeIcon style={{ fontSize: 20 }} icon=\"download\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    ) : (\r\n      <></>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourcesGrid;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nfunction ResourceUpload({ onAddResource }) {\r\n  const onChangeHandler = useCallback(event => {\r\n    input.current.innerText = event.target.files[0].name;\r\n  });\r\n\r\n  const onSubmitHandler = useCallback(async event => {\r\n    try {\r\n      const data = document.getElementById(\"file-upload\").files[0];\r\n      let formData = new FormData();\r\n\r\n      formData.append(\"resourceFile\", data);\r\n      onAddResource(formData);\r\n      event.preventDefault();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  });\r\n\r\n  const input = React.createRef();\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <h3>Upload File:</h3>\r\n        <label htmlFor=\"file-upload\" className=\"button\">\r\n          Select file:\r\n        </label>\r\n        <input\r\n          id=\"file-upload\"\r\n          type=\"file\"\r\n          style={{ display: \"none\" }}\r\n          name=\"resourceFile\"\r\n          onChange={onChangeHandler}\r\n        ></input>\r\n\r\n        <input\r\n          className=\"button primary\"\r\n          type=\"submit\"\r\n          onClick={onSubmitHandler}\r\n        ></input>\r\n\r\n        <div id=\"fileName\" ref={input} disabled />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResourceUpload;\r\n","import React from \"react\";\r\nimport ResourcesGrid from \"./ResourcesGrid\";\r\nimport UploadResource from \"./UploadResource\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass ResourcesAdmin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n  }\r\n\r\n  getData = () => {\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/resources`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ data: data });\r\n      });\r\n  };\r\n\r\n  deleteResource = id => {\r\n    try {\r\n      fetch(`http://localhost:5000/resources/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: AuthService.getToken()\r\n        }\r\n      }).then(res => {\r\n        this.setState(prevState => ({\r\n          data: prevState.data.filter(el => el.id !== id)\r\n        }));\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  addResource = formData => {\r\n    try {\r\n      fetch(\"http://localhost:5000/resources/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: AuthService.getToken()\r\n        }\r\n      }).then(res => {\r\n        res.json().then(json => {\r\n          this.setState({ data: [...this.state.data, json] });\r\n        });\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ResourcesGrid\r\n          data={this.state.data}\r\n          onDeleteResource={this.deleteResource}\r\n        />\r\n        <UploadResource onAddResource={this.addResource} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourcesAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreatePost from \"./Posts/CreatePost\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ResourcesGrid from \"./Resources/ResourcesGrid\";\r\nimport UploadResource from \"./Resources/UploadResource\";\r\nimport ResourcesAdmin from \"./Resources/ResourcesAdmin\";\r\n\r\nconst AdminPage = props => {\r\n  const [mode, setMode] = useState([]);\r\n\r\n  const handleCreatePost = event => {\r\n    setMode(\"ADD_POST\");\r\n  };\r\n\r\n  const handleCancelNewPost = event => {\r\n    setMode(\"\");\r\n  };\r\n\r\n  const addPostButton = mode !== \"ADD_POST\" && (\r\n    <>\r\n      <button className=\"button\" onClick={handleCreatePost}>\r\n        Create\r\n      </button>\r\n      <span>Create new post.</span>\r\n    </>\r\n  );\r\n  const addPost = mode === \"ADD_POST\" && <CreatePost />;\r\n\r\n  return AuthService.getUserRole() === \"admin\" ? (\r\n    <>\r\n      <h1>Admin</h1>\r\n      <hr></hr>\r\n      <h2>Posts</h2>\r\n      {addPostButton}\r\n      {addPost}\r\n      <hr></hr>\r\n      <h2>Resources</h2>\r\n      <ResourcesAdmin />\r\n      <hr></hr>\r\n    </>\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React from \"react\";\r\n\r\nconst AccountManagement = props => {\r\n  return <div>Signup</div>;\r\n};\r\n\r\nexport default AccountManagement;\r\n","import React from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass EditPost extends React.Component {\r\n  handleCancel = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n  handleSave = async (post, e) => {\r\n    const token = AuthService.getToken();\r\n    // Save post\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/posts/${post.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(post),\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: token }\r\n    })\r\n      .then(res => {\r\n        // Navigate to post\r\n        window.location = `/posts/${post.id}`;\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { post, setMode } = this.props;\r\n\r\n    return AuthService.getUserRole() === \"admin\" ? (\r\n      <div style={{ padding: \"0% 10%\" }}>\r\n        <PostForm post={post} onSave={this.handleSave} />\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n","import React from \"react\";\r\nimport ViewPost from \"./ViewPost\";\r\nimport EditPost from \"./EditPost\";\r\n\r\nclass SinglePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: null,\r\n      relations: null,\r\n      mode: \"VIEW\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/posts/${this.props.id}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ post: data });\r\n      });\r\n\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/posts/${this.props.id}/relations`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ relations: data });\r\n      });\r\n  }\r\n\r\n  setMode = mode => {\r\n    this.setState({ mode: mode });\r\n  };\r\n\r\n  render() {\r\n    const { id } = this.props;\r\n    // view or edit\r\n    let postComponent = null;\r\n    if (this.state.mode === \"EDIT\")\r\n      postComponent = (\r\n        <>\r\n          <EditPost post={this.state.post} setMode={this.setMode} />\r\n        </>\r\n      );\r\n    else if (this.state.mode === \"VIEW\")\r\n      postComponent = (\r\n        <ViewPost\r\n          post={this.state.post}\r\n          relations={this.state.relations}\r\n          setMode={this.setMode}\r\n        />\r\n      );\r\n\r\n    return postComponent;\r\n  }\r\n}\r\n\r\nexport default SinglePost;\r\n","import React from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    AuthService.logout();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      submitted: false,\r\n      loading: false,\r\n      error: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ submitted: true });\r\n    const { email, password } = this.state;\r\n\r\n    // stop here if form is invalid\r\n    if (!(email && password)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    AuthService.login(email, password).then(\r\n      user => {\r\n        const { from } = this.props.location.state || {\r\n          from: { pathname: \"/\" }\r\n        };\r\n        this.props.history.push(from);\r\n      },\r\n      error => this.setState({ error, loading: false })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { email, password, submitted, loading, error } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form name=\"login\" onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n            {submitted && !email && <div>Email is required</div>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n            {submitted && !password && (\r\n              <div className=\"help-block\">Password is required</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button className=\"button primary\" disabled={loading}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          {error && <div>{error}</div>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nconst LogoutPage = () => {\r\n  useEffect(() => AuthService.logout());\r\n  return (\r\n    <>\r\n      <h1>Logout</h1>\r\n      <div>\r\n        You have successfully logged out of this site. Click{\" \"}\r\n        <Link to=\"/\">Here</Link> to go back to the home page.\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass UserInfo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: AuthService.getUser()\r\n    };\r\n\r\n    window.addEventListener(\r\n      \"localStorageChanged\",\r\n      this.storageHandlerEvent,\r\n      false\r\n    );\r\n  }\r\n\r\n  storageHandlerEvent = event => {\r\n    this.setState({ user: AuthService.getUser() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ fontSize: \"Small\" }}>\r\n        {this.state.user && (\r\n          <>\r\n            <span style={{ height: \"60px\", lineHeight: \"60px\", float: \"left\" }}>\r\n              Welcome {this.state.user.name}!\r\n            </span>\r\n            <Link to=\"/logout\">\r\n              <button style={{ border: \"none\", background: \"none\" }}>\r\n                Logout\r\n              </button>\r\n            </Link>\r\n          </>\r\n        )}\r\n        {!this.state.user && (\r\n          <Link to=\"/login\">\r\n            <button style={{ border: \"none\", background: \"none\" }}>\r\n              Login\r\n            </button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\n\r\nclass SignUpPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Sign Up</h1>\r\n        There's currently nothing to do here...\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport ListPosts from \"./components/Posts/ListPosts\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport AccountManagement from \"./components/AccountManagement\";\r\nimport SinglePost from \"./components/Posts/SinglePost\";\r\nimport LoginPage from \"./components/Login/LoginPage\";\r\nimport LogoutPage from \"./components/Login/LogoutPage\";\r\nimport UserInfo from \"./components/Login/UserInfo\";\r\nimport SignUpPage from \"./components/Login/SignUpPage\";\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// Font Awesome\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelopeSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(\r\n  fab,\r\n  faGithub,\r\n  faLinkedin,\r\n  faEnvelopeSquare,\r\n  faTrashAlt,\r\n  faDownload\r\n);\r\n\r\nconst MainMenu = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <button\r\n          style={{\r\n            fontFamily: \"'Kalam', cursive\",\r\n            fontSize: \"20px\",\r\n            fontWeight: 400,\r\n            border: \"none\",\r\n            background: \"none\"\r\n          }}\r\n        >\r\n          David Barone-BI Developer\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/posts\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Posts</button>\r\n      </Link>\r\n      <Link to=\"/search\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Search</button>\r\n      </Link>\r\n      <Link to=\"/admin\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Admin</button>\r\n      </Link>\r\n      <Link to=\"/signup\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Signup</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ViewPostX({ match }) {\r\n  return (\r\n    <>\r\n      <SinglePost id={match.params.id} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <header>\r\n          <MainMenu />\r\n          <span style={{ position: \"absolute\", right: \"0px\" }}>\r\n            <UserInfo />\r\n          </span>\r\n        </header>\r\n        <main className=\"main\">\r\n          <Route path=\"/posts/:id\" component={ViewPostX} />\r\n          <div style={{ padding: \"0% 10%\" }}>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/posts\" component={ListPosts} />\r\n            <Route exact path=\"/search\" component={SearchPage} />\r\n            <Route exact path=\"/account\" component={AccountManagement} />\r\n            <Route exact path=\"/admin\" component={AdminPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/logout\" component={LogoutPage} />\r\n            <Route exact path=\"/signup\" component={SignUpPage} />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div>Copyright (c) David Barone 2019</div>\r\n        </footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}