{"version":3,"sources":["components/Posts/ViewPost.js","logo.svg","components/Posts/PostTeaser.js","services/AuthService.js","components/Posts/ListPosts.js","components/HomePage.js","components/SearchPage.js","components/Posts/PostForm.js","components/Posts/CreatePost.js","components/AdminPage.js","components/AccountManagement.js","components/Posts/EditPost.js","components/Posts/SinglePost.js","components/Login/LoginPage.js","components/Login/LogoutPage.js","components/Login/UserInfo.js","components/Login/SignUpPage.js","App.js","serviceWorker.js","index.js"],"names":["ViewPost","handleEditPost","event","props","setMode","script","Promise","resolve","reject","onload","document","head","appendChild","this","post","style","createElement","innerText","replace","process","div","innerHTML","i","childNodes","length","child","nodeName","src","s","type","async","loadScriptSync","eval","forEach","code","createTextNode","e","text","content","post_type","marked","componentDidMount","ref","el","title","color","fontSize","updated_by","moment","published_dt","format","class","onClick","marginTop","dangerouslySetInnerHTML","__html","React","Component","module","exports","PostTeaser","id","useState","setPost","useEffect","a","fetch","res","json","fetchPost","href","teaser","originalSetItem","localStorage","setItem","key","value","apply","arguments","Event","window","dispatchEvent","originalRemoveItem","removeItem","getToken","getItem","setToken","token","getUser","decode","email","password","body","method","headers","JSON","stringify","then","get","catch","err","Error","login","logout","getUserRole","user","role","loggedIn","exp","Date","now","isTokenExpired","ListPosts","posts","setPosts","setErrors","Authorization","AuthService","console","log","fetchPosts","map","p","HomePage","padding","margin","width","display","textAlign","borderRadius","alt","cite","icon","SearchPage","PostForm","getPostObject","titleField","current","teaserField","contentField","postTypeField","headField","codeField","styleField","parent_id","parseInt","parentIdField","undefined","publishedDtField","deleted","handleCancelEdit","handleSave","onSave","preventDefault","createRef","deletedField","onCancel","className","defaultValue","rows","placeholder","toISOString","substr","CreatePost","handleCancel","newPost","location","AdminPage","mode","addPostButton","addPost","to","AccountManagement","EditPost","SinglePost","setState","state","data","postComponent","LoginPage","submitted","loading","error","handleChange","bind","handleSubmit","target","name","from","pathname","history","push","onSubmit","htmlFor","onChange","disabled","LogoutPage","UserInfo","storageHandlerEvent","addEventListener","height","lineHeight","float","border","background","SignUpPage","library","add","fab","faGithub","faLinkedin","faEnvelopeSquare","MainMenu","fontFamily","fontWeight","ViewPostX","match","params","App","position","right","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.432f8a2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\n\r\nclass ViewPost extends React.Component {\r\n  loadScriptSync(script) {\r\n    return new Promise((resolve, reject) => {\r\n      script.onload = function() {\r\n        resolve({ script });\r\n      };\r\n\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Add inline style if set\r\n    if (this.props.post.style) {\r\n      const style = document.createElement(\"style\");\r\n      style.innerText = this.props.post.style;\r\n      document.head.appendChild(style);\r\n    }\r\n\r\n    // Add head if any\r\n    // All head contents must be nodes with src attributes.\r\n    if (this.props.post.head) {\r\n      const head = this.props.post.head.replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n      // Have to convert head string to node\r\n      var div = document.createElement(\"div\");\r\n      div.innerHTML = head;\r\n\r\n      for (let i = 0; i < div.childNodes.length; i++) {\r\n        const child = div.childNodes[i];\r\n\r\n        if (child && child.nodeName === \"SCRIPT\" && child.src !== \"\") {\r\n          var s = document.createElement(\"script\");\r\n          s.type = \"text/javascript\";\r\n          s.src = child.src;\r\n          s.async = false;\r\n          //document.head.appendChild(s);\r\n          await this.loadScriptSync(s);\r\n        } else {\r\n          eval(child.innerHTML);\r\n        }\r\n      }\r\n      // Change this to div.childNodes to support multiple top-level nodes\r\n      div.childNodes.forEach(child => {});\r\n    }\r\n\r\n    // Add code if any\r\n    // Wrap this in inline <script> block.\r\n    if (this.props.post.code) {\r\n      const code = this.props.post.code.replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = false;\r\n\r\n      try {\r\n        // most browsers\r\n        script.appendChild(document.createTextNode(code));\r\n        document.head.appendChild(script);\r\n      } catch (e) {\r\n        // option (b) for other browsers\r\n        script.text = code;\r\n        document.head.appendChild(script);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditPost = event => {\r\n    this.props.setMode(\"EDIT\");\r\n  };\r\n\r\n  content() {\r\n    if (!this.props.post.content) {\r\n      return undefined;\r\n    }\r\n    if (this.props.post.post_type === \"MARKDOWN\") {\r\n      return marked(this.props.post.content).replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n    } else {\r\n      return this.props.post.content.replace(\r\n        /https:\\/\\/api.dbarone.com/g,\r\n        process.env.REACT_APP_API_ROOT\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { post, setMode } = this.props;\r\n    this.componentDidMount();\r\n    return (\r\n      <div ref={el => (this.div = el)}>\r\n        <h1>{post.title}</h1>\r\n        <div style={{ color: \"#999\", fontSize: \"0.8em\" }}>\r\n          By {post.updated_by} on {moment(post.published_dt).format(\"LL\")}\r\n          <div>\r\n            <button class=\"button\" onClick={this.handleEditPost}>\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ marginTop: \"6px\" }}\r\n          dangerouslySetInnerHTML={{ __html: this.content() }}\r\n        ></div>\r\n        {/* script inserted here */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPost;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\n\r\nconst PostTeaser = ({ id }) => {\r\n  const [post, setPost] = useState(null);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  const teaser = post => {\r\n    if (!post.teaser) {\r\n      return undefined;\r\n    }\r\n\r\n    return marked(post.teaser).replace(\r\n      /https:\\/\\/api.dbarone.com/g,\r\n      process.env.REACT_APP_API_ROOT\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts/${id}`);\r\n      const post = await res.json();\r\n      setPost(post);\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  return post ? (\r\n    <>\r\n      <h2>\r\n        <a href={\"/posts/\" + post.id}>{post.title}</a>\r\n      </h2>\r\n      <div style={{ color: \"#999\", fontSize: \"0.8em\" }}>\r\n        By {post.updated_by} on {moment(post.published_dt).format(\"LL\")}\r\n      </div>\r\n      <div\r\n        style={{ marginTop: \"6px\" }}\r\n        dangerouslySetInnerHTML={{ __html: teaser(post) }}\r\n      ></div>\r\n\r\n      <hr />\r\n    </>\r\n  ) : (\r\n    <div />\r\n  );\r\n};\r\n\r\nexport default PostTeaser;\r\n","import decode from \"jwt-decode\";\r\n\r\n// rewrite localStorage.setItem function, adding\r\n// custom event so that we can listen to changes\r\n// in other components.\r\n// The storage event only works in different\r\n// windows.\r\n// Ideally, we should put .User into Redux\r\nvar originalSetItem = localStorage.setItem;\r\nlocalStorage.setItem = function(key, value) {\r\n  originalSetItem.apply(this, arguments);\r\n  var event = new Event(\"localStorageChanged\");\r\n  event.value = value; // Optional..\r\n  event.key = key; // Optional..\r\n  window.dispatchEvent(event);\r\n};\r\n\r\n// Same for .removeItem\r\nvar originalRemoveItem = localStorage.removeItem;\r\nlocalStorage.removeItem = function(key) {\r\n  originalRemoveItem.apply(this, arguments);\r\n  var event = new Event(\"localStorageChanged\");\r\n  event.key = key; // Optional..\r\n  window.dispatchEvent(event);\r\n};\r\n\r\nfunction getToken() {\r\n  // Retrieves the user token from localStorage\r\n  const t = localStorage.getItem(\"token\");\r\n  return t;\r\n}\r\n\r\nfunction setToken(token) {\r\n  // Saves token to localStorage\r\n  localStorage.setItem(\"token\", token);\r\n}\r\n\r\nfunction getUser() {\r\n  const token = getToken();\r\n  const user = token && decode(token);\r\n  return user;\r\n}\r\n\r\nfunction getUserRole() {\r\n  const user = getUser();\r\n  const role = user && user.role;\r\n  return role;\r\n}\r\n\r\nfunction loggedIn() {\r\n  // Checks if there is a saved token and it's still valid\r\n  const token = getToken(); // GEtting token from localstorage\r\n  return !!token && !isTokenExpired(token); // handwaiving here\r\n}\r\n\r\nfunction isTokenExpired(token) {\r\n  try {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      // Checking if token is expired. N\r\n      return true;\r\n    } else return false;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function login(email, password) {\r\n  const body = {\r\n    email,\r\n    password\r\n  };\r\n\r\n  fetch(`${process.env.REACT_APP_API_ROOT}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  })\r\n    .then(res => {\r\n      const token = res.headers.get(\"x-access-token\");\r\n      setToken(token);\r\n    })\r\n    .catch(err => {\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getUser,\r\n  getUserRole,\r\n  getToken,\r\n  loggedIn\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostTeaser from \"./PostTeaser\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nconst ListPosts = props => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  async function fetchPosts() {\r\n    const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${AuthService.getToken()}`\r\n      }\r\n    });\r\n    console.log(res);\r\n    res\r\n      .json()\r\n      .then(res => setPosts(res))\r\n      .catch(err => setErrors(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Posts</h1>\r\n      {posts.map(p => (\r\n        <PostTeaser key={p.id} id={p.id} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPosts;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <>\r\n      <section\r\n        style={{\r\n          padding: \"80px\"\r\n        }}\r\n      >\r\n        <div style={{ margin: \"auto\", width: \"1280px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"400px\",\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            <img\r\n              style={{ borderRadius: \"150px\" }}\r\n              src=\"http://placebeard.it/300/300\"\r\n              alt=\"Description\"\r\n            ></img>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              width: \"880px\",\r\n              display: \"inline-block\",\r\n              fontSize: \"x-large\"\r\n            }}\r\n          >\r\n            <blockquote cite=\"https://www.dbarone.com/\">\r\n              <p>\r\n                People always ask me 'How have you made the Business\r\n                Intelligence community a better place?'. I tell them 'I'm good\r\n                with colors. I use a lot of them in my charts. Accountants like\r\n                me because I compliment them on their Excel skills. I love\r\n                working with complex organisations because German ERP software\r\n                brings the best out in me. If you talk about Big Data, I'll\r\n                smile at you like I pretend to know what you're talking about,\r\n                but above all, I've put the humanity (and sexuality) back into\r\n                BI.\r\n              </p>\r\n              <cite>\r\n                <a href=\"https://www.dbarone.com\">David Barone</a>\r\n              </cite>\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <a\r\n            title=\"Linkedin\"\r\n            href=\"https://www.linkedin.com/in/david-barone-083aa05b/\"\r\n          >\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon={[\"fab\", \"linkedin\"]}\r\n            />\r\n          </a>\r\n\r\n          <a title=\"Github\" href=\"https://github.com/davidbarone\">\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon={[\"fab\", \"github\"]}\r\n            />\r\n          </a>\r\n\r\n          <a title=\"Mail\" href=\"mailto:davidbarone@live.com\">\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: 40, margin: \"10px\" }}\r\n              icon=\"envelope-square\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst SearchPage = props => {\r\n  return (\r\n    <>\r\n      <h1>Search</h1>\r\n      There's currently nothing to do here...\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = props.post.id;\r\n    this.titleField = React.createRef();\r\n    this.teaserField = React.createRef();\r\n    this.contentField = React.createRef();\r\n    this.postTypeField = React.createRef();\r\n    this.headField = React.createRef();\r\n    this.codeField = React.createRef();\r\n    this.styleField = React.createRef();\r\n    this.parentIdField = React.createRef();\r\n    this.publishedDtField = React.createRef();\r\n    this.deletedField = React.createRef();\r\n  }\r\n\r\n  getPostObject = () => {\r\n    return {\r\n      id: this.id,\r\n      title: this.titleField.current.value,\r\n      teaser: this.teaserField.current.value,\r\n      content: this.contentField.current.value,\r\n      post_type: this.postTypeField.current.value,\r\n      head: this.headField.current.value,\r\n      code: this.codeField.current.value,\r\n      style: this.styleField.current.value,\r\n      parent_id: parseInt(this.parentIdField.current.value) || undefined,\r\n      published_dt: new Date(this.publishedDtField.current.value) || moment(),\r\n      deleted: false // this.deletedField.current.value || false\r\n    };\r\n  };\r\n\r\n  handleCancelEdit = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n\r\n  handleSave = e => {\r\n    const post = this.getPostObject();\r\n    this.props.onSave(post, e);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { post, onSave, onCancel } = this.props || {};\r\n\r\n    return (\r\n      <>\r\n        <form>\r\n          <fieldset>\r\n            <legend>Edit / Create Post</legend>\r\n            <button class=\"button primary\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n            <button class=\"button\" onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n            <label>Title:</label>\r\n            <input\r\n              className=\"full-width\"\r\n              type=\"text\"\r\n              ref={this.titleField}\r\n              defaultValue={post.title}\r\n            ></input>\r\n            <label>Teaser (This section ONLY supports MARKDOWN):</label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"3\"\r\n              ref={this.teaserField}\r\n              defaultValue={post.teaser}\r\n            ></textarea>\r\n            <label>\r\n              Content (Note no executable code here. Put scripts in head or\r\n              code):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"8\"\r\n              ref={this.contentField}\r\n              defaultValue={post.content}\r\n            ></textarea>\r\n            <label>Post Type:</label>\r\n            <select ref={this.postTypeField} defaultValue={post.post_type}>\r\n              <option>HTML</option>\r\n              <option>MARKDOWN</option>\r\n            </select>\r\n            <label>\r\n              Head (Script links to external files and other CSS links etc):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"3\"\r\n              ref={this.headField}\r\n              defaultValue={post.head}\r\n            ></textarea>\r\n            <label>\r\n              Code (Inline JS without the script tag - just the JS code):\r\n            </label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"8\"\r\n              ref={this.codeField}\r\n              defaultValue={post.code}\r\n              placeholder=\"const hello_world = 'hello world!';\r\nalert(hello_world);\"\r\n            ></textarea>\r\n            <label>Style:</label>\r\n            <textarea\r\n              className=\"full-width\"\r\n              rows=\"8\"\r\n              ref={this.styleField}\r\n              defaultValue={post.style}\r\n            ></textarea>\r\n            <label>Published Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              ref={this.publishedDtField}\r\n              defaultValue={new Date(post.published_dt || moment())\r\n                .toISOString()\r\n                .substr(0, 10)}\r\n            ></input>\r\n            <label>Parent ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              ref={this.parentIdField}\r\n              defaultValue={post.parent_id}\r\n            ></input>\r\n            <label>Deleted:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              ref={this.deletedField}\r\n              defaultValue={post.deleted}\r\n            ></input>\r\n          </fieldset>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass CreatePost extends React.Component {\r\n  handleCancel = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n  handleSave = async (post, event) => {\r\n    // Save post\r\n    console.log(post);\r\n    const res = await fetch(`${process.env.REACT_APP_API_ROOT}/posts`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: AuthService.getToken()\r\n      }\r\n    });\r\n    const newPost = await res.json();\r\n    console.log(newPost);\r\n    // Navigate to post\r\n    window.location = `/posts/${newPost.id}`;\r\n  };\r\n\r\n  render() {\r\n    return <PostForm post={{}} onSave={this.handleSave} />;\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreatePost from \"./Posts/CreatePost\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AdminPage = props => {\r\n  const [mode, setMode] = useState([]);\r\n\r\n  const handleCreatePost = event => {\r\n    setMode(\"ADD_POST\");\r\n  };\r\n\r\n  const handleCancelNewPost = event => {\r\n    setMode(\"\");\r\n  };\r\n\r\n  const addPostButton = mode !== \"ADD_POST\" && (\r\n    <>\r\n      <button class=\"button\" onClick={handleCreatePost}>\r\n        Create\r\n      </button>\r\n      <span>Create new post.</span>\r\n    </>\r\n  );\r\n  const addPost = mode === \"ADD_POST\" && <CreatePost />;\r\n\r\n  return AuthService.getUserRole() === \"admin\" ? (\r\n    <>\r\n      <h1>Admin</h1>\r\n      <hr></hr>\r\n      <h2>Posts</h2>\r\n      {addPostButton}\r\n      {addPost}\r\n    </>\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React from \"react\";\r\n\r\nconst AccountManagement = props => {\r\n  return <div>Signup</div>;\r\n};\r\n\r\nexport default AccountManagement;\r\n","import React from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass EditPost extends React.Component {\r\n  handleCancel = event => {\r\n    this.props.setMode(\"VIEW\");\r\n  };\r\n  handleSave = async (post, e) => {\r\n    const token = AuthService.getToken();\r\n    // Save post\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/posts/${post.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(post),\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: token }\r\n    })\r\n      .then(res => {\r\n        // Navigate to post\r\n        window.location = `/posts/${post.id}`;\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { post, setMode } = this.props;\r\n\r\n    return AuthService.getUserRole() === \"admin\" ? (\r\n      <PostForm post={post} onSave={this.handleSave} />\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n","import React from \"react\";\r\nimport ViewPost from \"./ViewPost\";\r\nimport EditPost from \"./EditPost\";\r\n\r\nclass SinglePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: {},\r\n      mode: \"VIEW\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${process.env.REACT_APP_API_ROOT}/posts/${this.props.id}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ post: data });\r\n      });\r\n  }\r\n\r\n  setMode = mode => {\r\n    this.setState({ mode: mode });\r\n  };\r\n\r\n  render() {\r\n    const { id } = this.props;\r\n    // view or edit\r\n    let postComponent = null;\r\n    if (this.state.mode === \"EDIT\")\r\n      postComponent = (\r\n        <>\r\n          <h1>Edit Post</h1>\r\n          <EditPost post={this.state.post} setMode={this.setMode} />\r\n        </>\r\n      );\r\n    else if (this.state.mode === \"VIEW\")\r\n      postComponent = (\r\n        <ViewPost post={this.state.post} setMode={this.setMode} />\r\n      );\r\n\r\n    return postComponent;\r\n  }\r\n}\r\n\r\nexport default SinglePost;\r\n","import React from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    AuthService.logout();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      submitted: false,\r\n      loading: false,\r\n      error: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ submitted: true });\r\n    const { email, password } = this.state;\r\n\r\n    // stop here if form is invalid\r\n    if (!(email && password)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    AuthService.login(email, password).then(\r\n      user => {\r\n        const { from } = this.props.location.state || {\r\n          from: { pathname: \"/\" }\r\n        };\r\n        this.props.history.push(from);\r\n      },\r\n      error => this.setState({ error, loading: false })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { email, password, submitted, loading, error } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form name=\"login\" onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n            {submitted && !email && <div>Email is required</div>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n            {submitted && !password && (\r\n              <div className=\"help-block\">Password is required</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button class=\"button primary\" disabled={loading}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          {error && <div>{error}</div>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nconst LogoutPage = () => {\r\n  useEffect(() => AuthService.logout());\r\n  return (\r\n    <>\r\n      <h4>Logout</h4>\r\n      <div>\r\n        You have successfully logged out of this site. Click{\" \"}\r\n        <Link to=\"/\">Here</Link> to go back to the home page.\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nclass UserInfo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: AuthService.getUser()\r\n    };\r\n\r\n    window.addEventListener(\r\n      \"localStorageChanged\",\r\n      this.storageHandlerEvent,\r\n      false\r\n    );\r\n  }\r\n\r\n  storageHandlerEvent = event => {\r\n    this.setState({ user: AuthService.getUser() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ fontSize: \"Small\" }}>\r\n        {this.state.user && (\r\n          <>\r\n            <span style={{ height: \"60px\", lineHeight: \"60px\", float: \"left\" }}>\r\n              Welcome {this.state.user.name}!\r\n            </span>\r\n            <Link to=\"/logout\">\r\n              <button style={{ border: \"none\", background: \"none\" }}>\r\n                Logout\r\n              </button>\r\n            </Link>\r\n          </>\r\n        )}\r\n        {!this.state.user && (\r\n          <Link to=\"/login\">\r\n            <button style={{ border: \"none\", background: \"none\" }}>\r\n              Login\r\n            </button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\n\r\nclass SignUpPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Sign Up</h1>\r\n        Nothing to do here yet...\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport ListPosts from \"./components/Posts/ListPosts\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport AccountManagement from \"./components/AccountManagement\";\r\nimport SinglePost from \"./components/Posts/SinglePost\";\r\nimport LoginPage from \"./components/Login/LoginPage\";\r\nimport LogoutPage from \"./components/Login/LogoutPage\";\r\nimport UserInfo from \"./components/Login/UserInfo\";\r\nimport SignUpPage from \"./components/Login/SignUpPage\";\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// Font Awesome\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelopeSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fab, faGithub, faLinkedin, faEnvelopeSquare);\r\n\r\nconst MainMenu = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <button\r\n          style={{\r\n            fontFamily: \"'Kalam', cursive\",\r\n            fontSize: \"20px\",\r\n            fontWeight: 400,\r\n            border: \"none\",\r\n            background: \"none\"\r\n          }}\r\n        >\r\n          David Barone-BI Developer\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/posts\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Posts</button>\r\n      </Link>\r\n      <Link to=\"/search\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Search</button>\r\n      </Link>\r\n      <Link to=\"/admin\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Admin</button>\r\n      </Link>\r\n      <Link to=\"/signup\">\r\n        <button style={{ border: \"none\", background: \"none\" }}>Signup</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ViewPostX({ match }) {\r\n  return (\r\n    <>\r\n      <SinglePost id={match.params.id} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <header>\r\n          <MainMenu />\r\n          <span style={{ position: \"absolute\", right: \"0px\" }}>\r\n            <UserInfo />\r\n          </span>\r\n        </header>\r\n        <main>\r\n          <div style={{ width: \"1366px\", margin: \"0px auto\" }}>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/posts\" component={ListPosts} />\r\n            <Route path=\"/posts/:id\" component={ViewPostX} />\r\n            <Route exact path=\"/search\" component={SearchPage} />\r\n            <Route exact path=\"/account\" component={AccountManagement} />\r\n            <Route exact path=\"/admin\" component={AdminPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/logout\" component={LogoutPage} />\r\n            <Route exact path=\"/signup\" component={SignUpPage} />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div>Copyright (c) David Barone 2019</div>\r\n        </footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}